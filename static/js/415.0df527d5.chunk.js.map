{"version":3,"file":"static/js/415.0df527d5.chunk.js","mappings":"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","sources":["components/DropDownMenu.js","pages/Layout.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DropDownMenu = ({ label, items }) => {\n    const [open, setOpen] = useState(false);\n    const buttonRef = useRef(null);\n    const menuRef = useRef(null);\n    const containerRef = useRef(null);\n\n    const handleToggle = () => setOpen(prev => !prev);\n    const handleClose = () => setOpen(false);\n\n    const handleKeyDown = (e) => {\n        if (!open) return;\n\n        const links = menuRef.current.querySelectorAll(\"a\");\n        const currentIndex = Array.from(links).indexOf(document.activeElement);\n\n        switch (e.key) {\n            case \"ArrowDown\":\n                e.preventDefault();\n                links[(currentIndex + 1) % links.length].focus();\n                break;\n            case \"ArrowUp\":\n                e.preventDefault();\n                links[(currentIndex - 1 + links.length) % links.length].focus();\n                break;\n            case \"Escape\":\n                e.preventDefault();\n                handleClose();\n                buttonRef.current.focus();\n                break;\n            default:\n                break;\n        }\n    };\n\n    // Close on outside click\n    useEffect(() => {\n        const handleClickOutside = (e) => {\n            if (\n                open &&\n                containerRef.current &&\n                !containerRef.current.contains(e.target)\n            ) {\n                handleClose();\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, [open]);\n\n    return (\n        <li className=\"dropdown\" ref={containerRef}>\n            <button\n                type=\"button\"\n                ref={buttonRef}\n                onClick={handleToggle}\n                onKeyDown={handleKeyDown}\n                aria-haspopup=\"menu\"\n                aria-expanded={open}\n                className=\"nav-button\"\n            >\n                {label}\n            </button>\n\n            <ul\n                className={`dropdown-content ${open ? \"open\" : \"\"}`}\n                ref={menuRef}\n                role=\"menu\"\n            >\n                {items.map(({ to, text }, idx) => (\n                    <li key={idx} role=\"none\">\n                        <Link to={to} role=\"menuitem\" tabIndex={open ? 0 : -1}>\n                            {text}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </li>\n    );\n};\n\nexport default DropDownMenu;","import { useEffect, useState } from \"react\";\nimport { Outlet, Link} from \"react-router-dom\";\nimport DropDownMenu from \"../components/DropDownMenu\";\n\nconst Layout = () => {\n\n    const [darkMode, setDarkMode] = useState(() => {\n        return localStorage.getItem(\"darkMode\") === \"true\";\n    });\n\n    useEffect(() => {\n        document.body.classList.toggle(\"dark\", darkMode);\n        localStorage.setItem(\"darkMode\", darkMode);\n    }, [darkMode]);\n\n    return (\n        <>\n            <nav>\n                <ul>\n                    <li><Link to=\"/\">Home</Link></li>\n\n                    <DropDownMenu \n                        label=\"Cheques\"\n                        items={[\n                            { to: \"/cheques/printCheques\", text: \"Printing Cheques\" }\n                        ]}\n                    />\n                    \n                    <DropDownMenu \n                        label=\"Clover\"\n                        items={[\n                            { to: \"/clover/SalesTapes\", text: \"Sales Tapes\" }\n                        ]}\n                    />\n                    \n                    <DropDownMenu \n                        label=\"QuickBooks\"\n                        items={[\n                            { to: \"/quickbooks/EnterBills\", text: \"Enter Bills\" },\n                            { to: \"/quickbooks/NewItems\", text: \"Add New Items\" }\n                        ]}\n                    />\n                    <li style={{ marginLeft: \"auto\" }}>\n                        <label className=\"toggle-container\">\n                            <input \n                                type=\"checkbox\"\n                                checked={darkMode}\n                                onChange={() => setDarkMode(prev => !prev)}\n                            />\n                            <span className=\"slider\"></span>\n                        </label>\n                    </li>\n                </ul>\n            </nav>\n\n            <Outlet />\n        </>\n    )\n}\n\nexport default Layout;"],"names":["_ref","label","items","open","setOpen","useState","buttonRef","useRef","menuRef","containerRef","handleClose","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","_jsxs","className","ref","children","_jsx","type","onClick","handleToggle","prev","onKeyDown","links","querySelectorAll","currentIndex","Array","from","indexOf","activeElement","key","preventDefault","length","focus","role","map","_ref2","idx","to","text","Link","tabIndex","Layout","darkMode","setDarkMode","localStorage","getItem","body","classList","toggle","setItem","_Fragment","DropDownMenu","style","marginLeft","checked","onChange","Outlet"],"sourceRoot":""}