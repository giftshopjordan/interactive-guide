{"version":3,"file":"static/js/415.092adbc7.chunk.js","mappings":"oLAGA,MAsCA,EAtCqBA,IAAuB,IAAtB,MAAEC,EAAK,MAAEC,GAAOF,EAClC,MAAOG,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAG3BC,EAAaA,IAAMF,GAAQ,GAC3BG,EAAcA,IAAMH,GAAQ,GAElC,OACII,EAAAA,EAAAA,MAAA,MACIC,UAAU,WACVC,aAAcJ,EACdK,aAAcJ,EAAYK,SAAA,EAE1BC,EAAAA,EAAAA,KAAA,UACIC,KAAK,SACLC,QAZSC,IAAMZ,GAAQa,IAASA,IAahCC,QAASZ,EACTa,OAAQZ,EACR,gBAAc,OACd,gBAAeJ,EACfM,UAAU,aAAYG,SAErBX,IAGJE,IACGU,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,mBAAmBW,KAAK,OAAMR,SACvCV,EAAMmB,KAAI,CAAAC,EAAeC,KAAG,IAAjB,GAAEC,EAAE,KAAEC,GAAMH,EAAA,OACpBT,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACF,GAAIA,EAAIJ,KAAK,WAAUR,SAAEa,KAD1BF,EAEJ,QAIhB,EC0Bb,EA3DeI,KAEX,MAAOC,EAAqBC,IAA0BxB,EAAAA,EAAAA,WAAS,IACxDyB,EAAoBC,IAAyB1B,EAAAA,EAAAA,WAAS,IACtD2B,EAAwBC,IAA6B5B,EAAAA,EAAAA,WAAS,IAC9D6B,EAAUC,IAAe9B,EAAAA,EAAAA,WAAS,IACO,SAArC+B,aAAaC,QAAQ,cAQhC,OALAC,EAAAA,EAAAA,YAAU,KACNC,SAASC,KAAKC,UAAUC,OAAO,OAAQR,GACvCE,aAAaO,QAAQ,WAAYT,EAAS,GAC3C,CAACA,KAGA1B,EAAAA,EAAAA,MAAAoC,EAAAA,SAAA,CAAAhC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACF,GAAG,IAAGZ,SAAC,YAEjBC,EAAAA,EAAAA,KAACgC,EAAY,CACT5C,MAAM,UACNC,MAAO,CACH,CAAEsB,GAAI,wBAAyBC,KAAM,wBAI7CZ,EAAAA,EAAAA,KAACgC,EAAY,CACT5C,MAAM,SACNC,MAAO,CACH,CAAEsB,GAAI,qBAAsBC,KAAM,mBAI1CZ,EAAAA,EAAAA,KAACgC,EAAY,CACT5C,MAAM,aACNC,MAAO,CACH,CAAEsB,GAAI,yBAA0BC,KAAM,eACtC,CAAED,GAAI,uBAAwBC,KAAM,qBAG5CZ,EAAAA,EAAAA,KAAA,MAAIiC,MAAO,CAAEC,WAAY,QAASnC,UAC9BJ,EAAAA,EAAAA,MAAA,SAAOC,UAAU,mBAAkBG,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SACIC,KAAK,WACLkC,QAASd,EACTe,SAAUA,IAAMd,GAAYlB,IAASA,OAEzCJ,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,sBAMhCI,EAAAA,EAAAA,KAACqC,EAAAA,GAAM,MACR,C","sources":["components/DropDownMenu.js","pages/Layout.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DropDownMenu = ({ label, items }) => {\n    const [open, setOpen] = useState(false);\n\n    const handleToggle = () => setOpen(prev => !prev);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    return (\n        <li\n            className=\"dropdown\"\n            onMouseEnter={handleOpen}\n            onMouseLeave={handleClose}\n        >\n            <button\n                type=\"button\"\n                onClick={handleToggle}\n                onFocus={handleOpen}\n                onBlur={handleClose}\n                aria-haspopup=\"true\"\n                aria-expanded={open}\n                className=\"nav-button\"\n            >\n                {label}\n            </button>\n\n            {open && (\n                <ul className=\"dropdown-content\" role=\"menu\">\n                    {items.map(({ to, text }, idx) => (\n                        <li key={idx}>\n                            <Link to={to} role=\"menuitem\">{text}</Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </li>\n    );\n};\n\nexport default DropDownMenu;","import { useEffect, useState } from \"react\";\nimport { Outlet, Link} from \"react-router-dom\";\nimport DropDownMenu from \"../components/DropDownMenu\";\n\nconst Layout = () => {\n\n    const [showChequesDropdown, setShowChequesDropdown] = useState(false);\n    const [showCloverDropdown, setShowCloverDropdown] = useState(false);\n    const [showQuickbooksDropdown, setShowQuickbooksDropdown] = useState(false);\n    const [darkMode, setDarkMode] = useState(() => {\n        return localStorage.getItem(\"darkMode\") === \"true\";\n    });\n\n    useEffect(() => {\n        document.body.classList.toggle(\"dark\", darkMode);\n        localStorage.setItem(\"darkMode\", darkMode);\n    }, [darkMode]);\n\n    return (\n        <>\n            <nav>\n                <ul>\n                    <li><Link to=\"/\">Home</Link></li>\n\n                    <DropDownMenu \n                        label=\"Cheques\"\n                        items={[\n                            { to: \"/cheques/printCheques\", text: \"Printing Cheques\" }\n                        ]}\n                    />\n                    \n                    <DropDownMenu \n                        label=\"Clover\"\n                        items={[\n                            { to: \"/clover/SalesTapes\", text: \"Sales Tapes\" }\n                        ]}\n                    />\n                    \n                    <DropDownMenu \n                        label=\"QuickBooks\"\n                        items={[\n                            { to: \"/quickbooks/EnterBills\", text: \"Enter Bills\" },\n                            { to: \"/quickbooks/NewItems\", text: \"Add New Items\" }\n                        ]}\n                    />\n                    <li style={{ marginLeft: \"auto\" }}>\n                        <label className=\"toggle-container\">\n                            <input \n                                type=\"checkbox\"\n                                checked={darkMode}\n                                onChange={() => setDarkMode(prev => !prev)}\n                            />\n                            <span className=\"slider\"></span>\n                        </label>\n                    </li>\n                </ul>\n            </nav>\n\n            <Outlet />\n        </>\n    )\n}\n\nexport default Layout;"],"names":["_ref","label","items","open","setOpen","useState","handleOpen","handleClose","_jsxs","className","onMouseEnter","onMouseLeave","children","_jsx","type","onClick","handleToggle","prev","onFocus","onBlur","role","map","_ref2","idx","to","text","Link","Layout","showChequesDropdown","setShowChequesDropdown","showCloverDropdown","setShowCloverDropdown","showQuickbooksDropdown","setShowQuickbooksDropdown","darkMode","setDarkMode","localStorage","getItem","useEffect","document","body","classList","toggle","setItem","_Fragment","DropDownMenu","style","marginLeft","checked","onChange","Outlet"],"sourceRoot":""}